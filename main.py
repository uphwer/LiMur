# git clone https://github.com/eternnoir/pyTelegramBotAPI.git
# cd pyTelegramBotAPI
# python setup.py install
import telebot
from telebot import types
bot = telebot.TeleBot('5828640605:AAHQ-VQJrWNQ_LLJ3kbYzLpDCNostqdBi4o')


@bot.message_handler(commands=["help"])
def help(message):
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:\n"
                                      "/start ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
                                      "/main ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                                      "/about ‚Äî –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ –±–æ—Ç–∞")

@bot.message_handler(commands=["about"])
def about(message):
    bot.send_message(message.chat.id, "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª–∞ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ?\n"
                                      "–ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –ú–æ—è —Ä–∞–±–æ—Ç–∞ ‚Äî –Ω–∞—É—á–∏—Ç—å —Ç–µ–±—è –µ–π.\n"
                                      "–ë–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ —Ç—ã —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Ç–µ–±—è —Ç–µ–º–µ,\n"
                                      "–ê —Ç–∞–∫–∂–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ–π.\n"
                                      "–¢–∞–∫ —á—Ç–æ, –¥–∞–≤–∞–π –Ω–∞—á–Ω—ë–º!")

@bot.message_handler(commands=["start", 'main'])
def start(message):
    repmarkup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    inmarkup = types.InlineKeyboardMarkup()
    but_start = types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å üöÄ', callback_data='start')
    but_creators = types.InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç–µ–ª–∏ üíº', callback_data='creators')
    but_home = types.KeyboardButton('–ì–ª–∞–≤–Ω–∞—è üè°')
    inmarkup.add(but_start, but_creators)
    repmarkup.add(but_home)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø ‚Äî LiMur –±–æ—Ç, –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞!", reply_markup=repmarkup)
    bot.send_message(message.chat.id, "–ù–∞—á–∞—Ç—å ‚Äî –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ\n"
                                      "–°–æ–∑–¥–∞—Ç–µ–ª–∏ ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π", reply_markup=inmarkup)

@bot.callback_query_handler(func = lambda call: True)
def answer(call):
    if call.data == 'start':
        markup = types.InlineKeyboardMarkup()
        but_oxf = types.InlineKeyboardButton(text='–û–∫—Å—Ñ–æ—Ä–¥—Å–∫–∞—è –∑–∞–ø—è—Ç–∞—è', callback_data='oxford')
        markup.add(but_oxf)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–í—ã–±–µ—Ä–∏ —Ç–µ–º—É:', reply_markup=markup)
    elif call.data == 'creators':
        markup = types.InlineKeyboardMarkup()
        but_it = types.InlineKeyboardButton(text='–¢–∏–º—É—Äüßëüèª‚Äçüíª', url='https://vk.com/g_timur')
        but_lingv = types.InlineKeyboardButton(text='–ê–ª–∏–Ω–∞ üë©üèª‚Äçüè´', url='https://vk.com/allosse')
        markup.add(but_it, but_lingv)
        bot.send_message(call.message.chat.id, "–°–æ–∑–¥–∞—Ç–µ–ª–∏ –±–æ—Ç–∞:", reply_markup='')
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç ‚Äî –¢–∏–º—É—Ä –ì–∞—Ñ—Ñ–æ—Ä–æ–≤\n"
                                          "–õ–∏–Ω–≥–≤–∏—Å—Ç ‚Äî –ê–ª–∏–Ω–∞ –û—Å–∏–Ω—Ü–µ–≤–∞", reply_markup=markup)
    elif call.data == 'oxford':
        markup = types.InlineKeyboardMarkup()
        but_oxfex = types.InlineKeyboardButton(text='–ü—Ä–∏–º–µ—Ä—ã', callback_data='oxfex1')
        but_oxf1 = types.InlineKeyboardButton(text='–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ‚Ññ1', callback_data='oxf1')
        but_oxf2 = types.InlineKeyboardButton(text='–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ‚Ññ2', callback_data='oxf2')
        but_back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='start')
        markup.add(but_oxfex, but_oxf1, but_oxf2)
        markup.add(but_back)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–û–∫—Å—Ñ–æ—Ä–¥—Å–∫–∞—è –∑–∞–ø—è—Ç–∞—è.\n'
                                                                                             '–û—Å–∫—Ñ–æ—Ä–¥—Å–∫–∞—è –∑–∞–ø—è—Ç–∞—è (Oxford comma) ‚Äî –∑–∞–ø—è—Ç–∞—è, —Å—Ç–∞–≤—è—â–∞—è—Å—è –ø–µ—Ä–µ–¥ —Å–æ—é–∑–∞–º–∏ and, or –∏–ª–∏ nor,\n'
                                                                                             '–∞ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º –ø—É–Ω–∫—Ç–æ–º –≤ —Å–ø–∏—Å–∫–µ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.', reply_markup=markup)
    elif call.data == 'oxfex1':
        markup = types.InlineKeyboardMarkup()
        but_oxfnex = types.InlineKeyboardButton(text='–°–ª–µ–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ >>', callback_data='oxfex2')
        markup.add(but_oxfnex)
        ex1 = open('photos/example-1.jpg', 'rb')
        bot.send_photo(call.message.chat.id, ex1, 'We invited the rhinoceri, Washington, and Lincoln.\n'
                                                  '‚Äì –ú—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–æ—Å–æ—Ä–æ–≥–æ–≤, –í–∞—à–∏–Ω–≥—Ç–æ–Ω–∞ –∏ –õ–∏–Ω–∫–æ–ª—å–Ω–∞.\n'
                                                  '\n'
                                                  '–í —ç—Ç–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–∫—Å—Ñ–æ—Ä–¥—Å–∫–∞—è –∑–∞–ø—è—Ç–∞—è.\n'
                                                  '–ë–ª–∞–≥–æ–¥–∞—Ä—è –µ–π –º—ã –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ –¥–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ (–í–∞—à–∏–Ω–≥—Ç–æ–Ω –∏ –õ–∏–Ω–∫–æ–ª—å–Ω) –∏ –Ω–æ—Å–æ—Ä–æ–≥–∏.\n'
                                                  '–ó–∞—á–µ–º —Ç–∞–º –Ω–æ—Å–æ—Ä–æ–≥–∏ ‚Äì —ç—Ç–æ —É–∂–µ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å.', reply_markup=markup)
    elif call.data == 'oxfex2':
        markup = types.InlineKeyboardMarkup()
        but_oxfnex1 = types.InlineKeyboardButton(text='–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ‚Ññ1', callback_data='oxf1')
        but_oxfnex2 = types.InlineKeyboardButton(text='–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ‚Ññ2', callback_data='oxf2')
        markup.add(but_oxfnex1, but_oxfnex2)
        ex2 = open('photos/example-2.jpg', 'rb')
        bot.send_photo(call.message.chat.id, ex2, 'We invited the rhinoceri, Washington and Lincoln.\n'
                                                  '‚Äì –ú—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–æ—Å–æ—Ä–æ–≥–æ–≤: –í–∞—à–∏–Ω–≥—Ç–æ–Ω–∞ –∏ –õ–∏–Ω–∫–æ–ª—å–Ω–∞.\n'
                                                  '\n'
                                                  '–ó–∞–ø—è—Ç–∞—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–≤–æ–µ—Ç–æ—á–∏—è –∏–ª–∏ —Ç–∏—Ä–µ.\n'
                                                  '–í —ç—Ç–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–∫—Å—Ñ–æ—Ä–¥—Å–∫–æ–π –∑–∞–ø—è—Ç–æ–π —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –º–µ–Ω—è–µ—Ç —Å–º—ã—Å–ª:\n'
                                                  '–Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ –Ω–æ—Å–æ—Ä–æ–≥–∏ –ø–æ –∏–º–µ–Ω–∏ –í–∞—à–∏–Ω–≥—Ç–æ–Ω –∏ –õ–∏–Ω–∫–æ–ª—å–Ω.', reply_markup=markup)
    elif call.data == 'oxf1':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but_ex1 = types.KeyboardButton("–ö –∑–∞–¥–∞–Ω–∏—è–º üåü")
        but_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–∞—è üè°")
        markup.add(but_ex1)
        markup.add(but_main)
        bot.send_message(call.message.chat.id, '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ‚Ññ1\n'
                                               '\n'
                                               '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–ø—è—Ç–æ–π\n'
                                               '–ë—É–¥–µ—Ç –¥–∞–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å, —Å—Ç–∞–≤–∏—Ç—å –ª–∏ –∑–∞–ø—è—Ç—É—é, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–º—ã—Å–ª–∞', reply_markup=markup)

@bot.message_handler(content_types=["text"])
def text(message):
    if message.text.strip() == '–ì–ª–∞–≤–Ω–∞—è üè°':
        start(message)
    elif message.text.strip() == '–ö –∑–∞–¥–∞–Ω–∏—è–º üåü':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–∞—è üè°")
        markup.add(but_main)
        photo = open('photos/mmvxyri.jpg', 'rb')
        bot.send_photo(message.chat.id, photo, '–ó–∞–¥–∞–Ω–∏–µ ‚Ññ1\n'
                                               '\n'
                                               'Timur photographed two ostriches, Timothy(,) and Max.', reply_markup=markup)
        bot.register_next_step_handler(message, oxf_ex1_num1)
    else:
        cat = open('photos/ty26hmpfe3f51.jpg', 'rb')
        bot.send_photo(message.chat.id, cat, '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üò¨')
def oxf_ex1_num1(message):
    if message.text.strip() == 'Timur photographed two ostriches, Timothy and Max.':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–∞—è üè°")
        markup.add(but_main)
        photo = open('photos/people-chatting-house-party-3574393.jpg', 'rb')
        bot.send_message(message.chat.id, 'All right!')
        bot.send_photo(message.chat.id, photo, '–ó–∞–¥–∞–Ω–∏–µ ‚Ññ2\n'
                                               '\n'
                                               'Her friends, Steven(,) and Sarah, were present at the party.', reply_markup=markup)
        bot.register_next_step_handler(message, oxf_ex1_num2)
    elif message.text.strip() == 'Timur photographed two ostriches, Timothy, and Max.':
        photo = open('photos/mmvxyri1.jpg', 'rb')
        bot.send_photo(message.chat.id, photo, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!')
        bot.register_next_step_handler(message, oxf_ex1_num1)
    elif message.text.strip() == '–ì–ª–∞–≤–Ω–∞—è üè°':
        start(message)
    else:
        cat = open('photos/ty26hmpfe3f51.jpg', 'rb')
        bot.send_photo(message.chat.id, cat, '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üò¨')
        bot.register_next_step_handler(message, oxf_ex1_num1)
def oxf_ex1_num2(message):
    if message.text.strip() == 'Her friends, Steven and Sarah, were present at the party.':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–∞—è üè°")
        markup.add(but_main)
        photo = open('photos/christmas-dinner-a-family-preparing-christmas-dinner-and-looking-involved_259150-56199.jpg', 'rb')
        bot.send_message(message.chat.id, 'Awesome!')
        bot.send_photo(message.chat.id, photo, '–ó–∞–¥–∞–Ω–∏–µ ‚Ññ3\n'
                                               '\n'
                                               'My friend finds inspiration in cooking(,) her family(,) and her dog.', reply_markup=markup)
        bot.register_next_step_handler(message, oxf_ex1_num3)
    elif message.text.strip() == 'Her friends, Steven, and Sarah, were present at the party.':
        photo = open('photos/zato-ja-shablon.jpg', 'rb')
        bot.send_photo(message.chat.id, photo, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!')
        bot.register_next_step_handler(message, oxf_ex1_num2)
    elif message.text.strip() == '–ì–ª–∞–≤–Ω–∞—è üè°':
        start(message)
    else:
        cat = open('photos/ty26hmpfe3f51.jpg', 'rb')
        bot.send_photo(message.chat.id, cat, '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üò¨')
        bot.register_next_step_handler(message, oxf_ex1_num2)
def oxf_ex1_num3(message):
    if message.text.strip() == 'My friend finds inspiration in cooking, her family, and her dog.':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–∞—è üè°")
        markup.add(but_main)
        photo = open('photos/–Ω–æ–≤—ã–π-–º–æ–ª–æ—Ç–æ–∫-–∂–µ–ª—Ç—ã–π-—à–ª–µ–º-—Å—Ç–æ–∫–æ–≤—ã–µ-–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏_csp6899697-transformed.jpg', 'rb')
        bot.send_message(message.chat.id, 'Good job!!')
        bot.send_photo(message.chat.id, photo, 'Work in progress...', reply_markup=markup)
    elif message.text.strip() == 'My friend finds inspiration in cooking her family and her dog.':
        photo = open('photos/Halloween_vedma_21285.jpg', 'rb')
        bot.send_photo(message.chat.id, photo, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!')
        bot.register_next_step_handler(message, oxf_ex1_num3)
    elif message.text.strip() == '–ì–ª–∞–≤–Ω–∞—è üè°':
        start(message)
    else:
        cat = open('photos/ty26hmpfe3f51.jpg', 'rb')
        bot.send_photo(message.chat.id, cat, '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üò¨')
        bot.register_next_step_handler(message, oxf_ex1_num3)

print('Working...')
bot.infinity_polling()